{
	// Place your Contest workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Contest test cases cycle": {
		"scope": "csharp",
		"prefix": "read-test-cases",
		"body": [
			"int test_cases = read_int();",
			"for(int test_case = 0; test_case < test_cases; test_case++) {",
			"$0",
			"}"
		]
	},
	"Contest read int": {
		"scope": "csharp",
		"prefix": "read-int",
		"body": [
			"int $1 = read_int();",
			"$2"			
		]
	},
	"Contest read long": {
		"scope": "csharp",
		"prefix": "read-long",
		"body": [
			"long $1 = read_long();",
			"$2"			
		]
	},	
	"Contest read int array": {
		"scope": "csharp",
		"prefix": "read-int-array",
		"body": [
			"int[] $1 = read_ints();",
			"$2"			
		]
	},	
	"Contest read long array": {
		"scope": "csharp",
		"prefix": "read-long-array",
		"body": [
			"long[] $1 = read_longs();",
			"$2"			
		]
	}
}